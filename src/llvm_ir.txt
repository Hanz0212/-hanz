declare i32 @getint()          ; 读取一个整数
declare i32 @getchar()     ; 读取一个字符
declare void @putint(i32)      ; 输出一个整数
declare void @putch(i32)       ; 输出一个字符
declare void @putstr(i8*)      ; 输出字符串

@.str.1 = private unnamed_addr constant [3 x i8] c", \00"
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00"
@.str.3 = private unnamed_addr constant [5 x i8] c"\0A\0A\0\00"

@a = dso_local global i32 2
@b = dso_local global <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }> <{ i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, [0 x i32] zeroinitializer }>
@c = dso_local global i8 0
@d = dso_local global <{ [10 x i8] }> <{ [10 x i8] zeroinitializer }>

define dso_local i32 @fib(i32 %0) {
  %2 = alloca i32
  %3 = alloca i32
  store i32 %0, i32* %3
  %4 = load i32, i32* %3
  %5 = icmp eq i32 %4, 1
  %6 = zext i1 %5 to i32
  %7 = trunc i32 %6 to i1
  br i1 %7, label %8, label %9

8:
  store i32 1, i32* %2
  br label %23

9:
  %10 = load i32, i32* %3
  %11 = icmp eq i32 %10, 2
  %12 = zext i1 %11 to i32
  %13 = trunc i32 %12 to i1
  br i1 %13, label %14, label %15

14:
  store i32 2, i32* %2
  br label %23

15:
  %16 = load i32, i32* %3
  %17 = add i32 %16, -1
  %18 = call i32 @fib(i32 %17)
  %19 = load i32, i32* %3
  %20 = add i32 %19, -2
  %21 = call i32 @fib(i32 %20)
  %22 = add i32 %18, %21
  store i32 %22, i32* %2
  br label %23

23:
  %24 = load i32, i32* %2
  ret i32 %24
}

define dso_local i32 @main() {
  %1 = alloca i32
  %2 = alloca i32
  store i32 2, i32* %2
  %3 = alloca i32
  store i32 5, i32* %3
  %4 = call i32 @getint()
  store i32 %4, i32* %2
  %5 = call i32 @getint()
  store i32 %5, i32* %3
  %6 = load i32, i32* %2
  %7 = load i32, i32* %3
  %8 = mul i32 %6, %7
  %9 = sub i32 0, %8
  %10 = call i32 @fib(i32 4)
  %11 = mul i32 %9, %10
  %12 = load i32, i32* @a
  %13 = mul i32 %12, 1
  %14 = add i32 %11, %13
  %15 = sdiv i32 %14, 5
  store i32 %15, i32* %2
  %16 = call i32 @fib(i32 5)
  %17 = add i32 %16, 2
  %18 = call i32 @fib(i32 %17)
  %19 = sub i32 0, %18
  %20 = add i32 %19, -8894
  store i32 %20, i32* %3
  %21 = alloca i32
  store i32 -6, i32* %21
  %22 = load i32, i32* @a
  %23 = load i32, i32* %2
  %24 = load i32, i32* %2
  %25 = mul i32 %23, %24
  %26 = add i32 %22, %25
  store i32 %26, i32* @a
  %27 = load i32, i32* @a
  %28 = load i32, i32* %2
  %29 = load i32, i32* %2
  %30 = mul i32 %28, %29
  %31 = add i32 %27, %30
  store i32 %31, i32* @a
  %32 = load i32, i32* @a
  %33 = load i32, i32* %2
  %34 = load i32, i32* %2
  %35 = mul i32 %33, %34
  %36 = add i32 %32, %35
  store i32 %36, i32* @a
  %37 = load i32, i32* @a
  %38 = load i32, i32* %2
  %39 = load i32, i32* %2
  %40 = mul i32 %38, %39
  %41 = add i32 %37, %40
  store i32 %41, i32* @a
  %42 = load i32, i32* @a
  %43 = load i32, i32* %2
  %44 = load i32, i32* %2
  %45 = mul i32 %43, %44
  %46 = add i32 %42, %45
  store i32 %46, i32* @a
  %47 = load i32, i32* @a
  %48 = load i32, i32* %2
  %49 = load i32, i32* %2
  %50 = mul i32 %48, %49
  %51 = add i32 %47, %50
  store i32 %51, i32* @a
  %52 = load i32, i32* @a
  %53 = load i32, i32* %2
  %54 = load i32, i32* %2
  %55 = mul i32 %53, %54
  %56 = add i32 %52, %55
  store i32 %56, i32* @a
  %57 = load i32, i32* @a
  %58 = load i32, i32* %2
  %59 = load i32, i32* %2
  %60 = mul i32 %58, %59
  %61 = add i32 %57, %60
  store i32 %61, i32* @a
  %62 = load i32, i32* @a
  %63 = load i32, i32* %2
  %64 = load i32, i32* %2
  %65 = mul i32 %63, %64
  %66 = add i32 %62, %65
  store i32 %66, i32* @a
  %67 = load i32, i32* @a
  %68 = load i32, i32* %2
  %69 = load i32, i32* %2
  %70 = mul i32 %68, %69
  %71 = add i32 %67, %70
  store i32 %71, i32* @a
  store i32 0, i32* %2
  br label %72

72:
  %73 = load i32, i32* %2
  %74 = icmp slt i32 %73, 10
  %75 = zext i1 %74 to i32
  %76 = trunc i32 %75 to i1
  br i1 %76, label %77, label %82

77:
  %78 = load i32, i32* @a
  call void @putint(i32 %78)
  call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
  %79 = load i32, i32* %2
  %80 = add i32 %79, 1
  store i32 %80, i32* %2
  br label %81

81:
  br label %72

82:
  %83 = load i32, i32* %2
  %84 = load i32, i32* %3
  %85 = load i32, i32* %21
  call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  call void @putint(i32 %83)
  call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
  call void @putint(i32 %84)
  call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
  call void @putint(i32 %85)
  call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0))
  store i32 0, i32* %1
  br label %86

86:
  %87 = load i32, i32* %1
  ret i32 %87
}
