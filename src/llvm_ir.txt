declare i32 @getint()          ; 读取一个整数
declare i32 @getchar()     ; 读取一个字符
declare void @putint(i32)      ; 输出一个整数
declare void @putch(i32)       ; 输出一个字符
declare void @putstr(i8*)      ; 输出字符串

@.str.1 = private unnamed_addr constant [3 x i8] c", \00"
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00"
@.str.3 = private unnamed_addr constant [3 x i8] c", \00"
@.str.4 = private unnamed_addr constant [3 x i8] c", \00"
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00"

@a = dso_local global <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }> <{ i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, [0 x i32] zeroinitializer }>

define dso_local i32 @fib(i32 %0) {
  %2 = alloca i32
  %3 = alloca i32
  store i32 %0, i32* %3
  %4 = load i32, i32* %3
  %5 = icmp eq i32 %4, 1
  %6 = zext i1 %5 to i32
  %7 = trunc i32 %6 to i1
  br i1 %7, label %8, label %9

8:
  store i32 1, i32* %2
  br label %23

9:
  %10 = load i32, i32* %3
  %11 = icmp eq i32 %10, 2
  %12 = zext i1 %11 to i32
  %13 = trunc i32 %12 to i1
  br i1 %13, label %14, label %15

14:
  store i32 2, i32* %2
  br label %23

15:
  %16 = load i32, i32* %3
  %17 = add i32 %16, -1
  %18 = call i32 @fib(i32 %17)
  %19 = load i32, i32* %3
  %20 = add i32 %19, -2
  %21 = call i32 @fib(i32 %20)
  %22 = add i32 %18, %21
  store i32 %22, i32* %2
  br label %23

23:
  %24 = load i32, i32* %2
  ret i32 %24
}

define dso_local i32 @main() {
  %1 = alloca i32
  %2 = alloca i32
  store i32 2, i32* %2
  %3 = alloca i32
  store i32 5, i32* %3
  %4 = call i32 @getint()
  store i32 %4, i32* %2
  %5 = call i32 @getint()
  store i32 %5, i32* %3
  %6 = load i32, i32* %2
  %7 = load i32, i32* %3
  %8 = mul i32 %6, %7
  %9 = sub i32 0, %8
  %10 = call i32 @fib(i32 4)
  %11 = mul i32 %9, %10
  %12 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 1
  %13 = load i32, i32* %12
  %14 = mul i32 %13, 1
  %15 = add i32 %11, %14
  %16 = sdiv i32 %15, 5
  store i32 %16, i32* %2
  %17 = call i32 @fib(i32 5)
  %18 = add i32 %17, 2
  %19 = call i32 @fib(i32 %18)
  %20 = sub i32 0, %19
  %21 = add i32 %20, -8894
  store i32 %21, i32* %3
  %22 = alloca i32
  store i32 -6, i32* %22
  %23 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 0
  %24 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 0
  %25 = load i32, i32* %24
  %26 = load i32, i32* %2
  %27 = load i32, i32* %2
  %28 = mul i32 %26, %27
  %29 = add i32 %25, %28
  store i32 %29, i32* %23
  %30 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 1
  %31 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 1
  %32 = load i32, i32* %31
  %33 = load i32, i32* %2
  %34 = load i32, i32* %2
  %35 = mul i32 %33, %34
  %36 = add i32 %32, %35
  store i32 %36, i32* %30
  %37 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 2
  %38 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 2
  %39 = load i32, i32* %38
  %40 = load i32, i32* %2
  %41 = load i32, i32* %2
  %42 = mul i32 %40, %41
  %43 = add i32 %39, %42
  store i32 %43, i32* %37
  %44 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 3
  %45 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 3
  %46 = load i32, i32* %45
  %47 = load i32, i32* %2
  %48 = load i32, i32* %2
  %49 = mul i32 %47, %48
  %50 = add i32 %46, %49
  store i32 %50, i32* %44
  %51 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 4
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 4
  %53 = load i32, i32* %52
  %54 = load i32, i32* %2
  %55 = load i32, i32* %2
  %56 = mul i32 %54, %55
  %57 = add i32 %53, %56
  store i32 %57, i32* %51
  %58 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 5
  %59 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 5
  %60 = load i32, i32* %59
  %61 = load i32, i32* %2
  %62 = load i32, i32* %2
  %63 = mul i32 %61, %62
  %64 = add i32 %60, %63
  store i32 %64, i32* %58
  %65 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 6
  %66 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 6
  %67 = load i32, i32* %66
  %68 = load i32, i32* %2
  %69 = load i32, i32* %2
  %70 = mul i32 %68, %69
  %71 = add i32 %67, %70
  store i32 %71, i32* %65
  %72 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 7
  %73 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 7
  %74 = load i32, i32* %73
  %75 = load i32, i32* %2
  %76 = load i32, i32* %2
  %77 = mul i32 %75, %76
  %78 = add i32 %74, %77
  store i32 %78, i32* %72
  %79 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 8
  %80 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 8
  %81 = load i32, i32* %80
  %82 = load i32, i32* %2
  %83 = load i32, i32* %2
  %84 = mul i32 %82, %83
  %85 = add i32 %81, %84
  store i32 %85, i32* %79
  %86 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 9
  %87 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 9
  %88 = load i32, i32* %87
  %89 = load i32, i32* %2
  %90 = load i32, i32* %2
  %91 = mul i32 %89, %90
  %92 = add i32 %88, %91
  store i32 %92, i32* %86
  store i32 0, i32* %2
  br label %93

93:
  %94 = load i32, i32* %2
  %95 = icmp slt i32 %94, 10
  %96 = zext i1 %95 to i32
  %97 = trunc i32 %96 to i1
  br i1 %97, label %98, label %105

98:
  %99 = load i32, i32* %2
  %100 = getelementptr inbounds [10 x i32], [10 x i32]* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i32] }>* @a to [10 x i32]*), i32 0, i32 %99
  %101 = load i32, i32* %100
  call void @putint(i32 %101)
  call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
  %102 = load i32, i32* %2
  %103 = add i32 %102, 1
  store i32 %103, i32* %2
  br label %104

104:
  br label %93

105:
  %106 = load i32, i32* %2
  %107 = load i32, i32* %3
  %108 = load i32, i32* %22
  call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  call void @putint(i32 %106)
  call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0))
  call void @putint(i32 %107)
  call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0))
  call void @putint(i32 %108)
  call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  store i32 0, i32* %1
  br label %109

109:
  %110 = load i32, i32* %1
  ret i32 %110
}
